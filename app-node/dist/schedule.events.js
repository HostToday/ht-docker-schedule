"use strict";
/// <reference path="./typings/main.d.ts" />
var plugins = require("./schedule.plugins");
var tickerObs = plugins.rx.Observable
    .interval(5000).repeat();
exports.noTicker = false;
exports.startTicker = function () {
    var done = plugins.q.defer();
    exports.tickerSub = tickerObs.subscribe(function (x) {
        console.log('TickerCycle#: ' + x);
        //TrafficEnvironment.detectContainerChange();
    }, function (err) {
        console.log('Error: ' + err);
    }, function () {
        console.log('Completed');
    });
    console.log("subscribed ticker");
    if (exports.noTicker)
        exports.tickerSub.dispose();
    return done.promise;
};
exports.stopTicker = function () {
    exports.tickerSub.dispose();
};
exports.cooldown = function () {
    var done = plugins.q.defer();
    return done.promise;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVkdWxlLmV2ZW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsNENBQTRDO0FBQzVDLElBQU8sT0FBTyxXQUFXLG9CQUFvQixDQUFDLENBQUM7QUFFL0MsSUFBSSxTQUFTLEdBQUcsT0FBTyxDQUFDLEVBQUUsQ0FBQyxVQUFVO0tBQ2hDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUdsQixnQkFBUSxHQUFHLEtBQUssQ0FBQztBQUNqQixtQkFBVyxHQUFHO0lBQ3JCLElBQUksSUFBSSxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDN0IsaUJBQVMsR0FBRyxTQUFTLENBQUMsU0FBUyxDQUMzQixVQUFVLENBQUM7UUFDUCxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ2xDLDZDQUE2QztJQUNqRCxDQUFDLEVBQ0QsVUFBVSxHQUFHO1FBQ1QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDLENBQUM7SUFDakMsQ0FBQyxFQUNEO1FBQ0ksT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUM3QixDQUFDLENBQ0osQ0FBQztJQUNGLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUNqQyxFQUFFLENBQUMsQ0FBQyxnQkFBUSxDQUFDO1FBQUMsaUJBQVMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNsQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztBQUN4QixDQUFDLENBQUM7QUFFUyxrQkFBVSxHQUFHO0lBQ3BCLGlCQUFTLENBQUMsT0FBTyxFQUFFLENBQUM7QUFDeEIsQ0FBQyxDQUFBO0FBRVUsZ0JBQVEsR0FBRztJQUNsQixJQUFJLElBQUksR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQzdCLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO0FBQ3hCLENBQUMsQ0FBQyIsImZpbGUiOiJzY2hlZHVsZS5ldmVudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi90eXBpbmdzL21haW4uZC50c1wiIC8+XG5pbXBvcnQgcGx1Z2lucyA9IHJlcXVpcmUoXCIuL3NjaGVkdWxlLnBsdWdpbnNcIik7XG5cbmxldCB0aWNrZXJPYnMgPSBwbHVnaW5zLnJ4Lk9ic2VydmFibGVcbiAgICAuaW50ZXJ2YWwoNTAwMCkucmVwZWF0KCk7XG5cbmV4cG9ydCBsZXQgdGlja2VyU3ViO1xuZXhwb3J0IGxldCBub1RpY2tlciA9IGZhbHNlO1xuZXhwb3J0IGxldCBzdGFydFRpY2tlciA9IGZ1bmN0aW9uKCl7XG4gICAgbGV0IGRvbmUgPSBwbHVnaW5zLnEuZGVmZXIoKTtcbiAgICB0aWNrZXJTdWIgPSB0aWNrZXJPYnMuc3Vic2NyaWJlKFxuICAgICAgICBmdW5jdGlvbiAoeCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1RpY2tlckN5Y2xlIzogJyArIHgpO1xuICAgICAgICAgICAgLy9UcmFmZmljRW52aXJvbm1lbnQuZGV0ZWN0Q29udGFpbmVyQ2hhbmdlKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdFcnJvcjogJyArIGVycik7XG4gICAgICAgIH0sXG4gICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdDb21wbGV0ZWQnKTtcbiAgICAgICAgfVxuICAgICk7XG4gICAgY29uc29sZS5sb2coXCJzdWJzY3JpYmVkIHRpY2tlclwiKTtcbiAgICBpZiAobm9UaWNrZXIpIHRpY2tlclN1Yi5kaXNwb3NlKCk7XG4gICAgcmV0dXJuIGRvbmUucHJvbWlzZTtcbn07XG5cbmV4cG9ydCBsZXQgc3RvcFRpY2tlciA9IGZ1bmN0aW9uKCl7XG4gICAgdGlja2VyU3ViLmRpc3Bvc2UoKTtcbn1cblxuZXhwb3J0IGxldCBjb29sZG93biA9IGZ1bmN0aW9uKCl7XG4gICAgbGV0IGRvbmUgPSBwbHVnaW5zLnEuZGVmZXIoKTtcbiAgICByZXR1cm4gZG9uZS5wcm9taXNlO1xufTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
